apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: "com.gorylenko.gradle-git-properties"


task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	//archives javadocJar
}

dependencies {
	compile project(":qh-agency-msg-api")
	compile project(":qh-agency-service")

	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')

	compile('org.springframework.boot:spring-boot-starter-integration')


	compile('org.springframework.integration:spring-integration-amqp')
	compile('org.springframework.integration:spring-integration-core')
	compile('org.springframework.integration:spring-integration-event')
	compile('org.springframework.integration:spring-integration-file')
	//compile('org.springframework.integration:spring-integration-gemfire')
	compile('org.springframework.integration:spring-integration-mongodb')
	compile('org.springframework.integration:spring-integration-mqtt')
	compile('org.springframework.integration:spring-integration-redis')
	compile('org.springframework.integration:spring-integration-security')
	compile('org.springframework.integration:spring-integration-stream')
	compile('org.springframework.integration:spring-integration-websocket')
	compile('org.springframework.integration:spring-integration-zookeeper')

	compile("org.springframework.boot:spring-boot-devtools")
	compile('com.fasterxml.jackson.dataformat:jackson-dataformat-xml')
	compile('org.apache.httpcomponents:httpclient')

	testCompile('org.springframework.boot:spring-boot-starter-test')

	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('com.querydsl:querydsl-mongodb')
	compile('com.querydsl:querydsl-apt')
	compile('com.querydsl:querydsl-core')
	compile('joda-time:joda-time')

	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.security.oauth:spring-security-oauth2')
	compile('org.springframework.security:spring-security-jwt')
	// compile('org.mongodb.morphia:morphia')
	// querydslapt('com.querydsl:querydsl-apt')

//    compile "io.swagger:swagger-core"  // 1.5.12
//    compile "io.springfox:springfox-swagger2"
//    compile "io.springfox:springfox-spi"
//    compile "io.springfox:springfox-data-rest"
//    compile "io.springfox:springfox-staticdocs"
//    compile 'io.springfox:springfox-swagger-ui'


	compile 'org.glassfish.jersey.ext:jersey-spring3'
	compile('org.springframework.boot:spring-boot-starter-jersey')
}

test {
	testLogging.showStandardStreams = false
}


bootRun {
	addResources = true
	systemProperties = System.properties
}

bootRepackage {
	enabled = false
}

springBoot {
	buildInfo {
		additionalProperties = [
				'foo': 'bar'
		]
	}
}

publish {
	dependsOn assemble
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java

			artifact sourcesJar {
				classifier "sources"
			}

		}
	}
}

jar {
	manifest {
		attributes "Implementation-Version": project.version
	}
}
