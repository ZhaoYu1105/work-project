apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: "com.gorylenko.gradle-git-properties"


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    //archives javadocJar
}


dependencies {
    compile project(":qh-vote-domain")
    compile project(":qh-vote-api")
    compile project(":qh-vote-msg-api")

    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile("org.springframework.boot:spring-boot-devtools")
    compile('com.fasterxml.jackson.dataformat:jackson-dataformat-xml')
    compile('org.apache.httpcomponents:httpclient')
    compile('org.springframework.boot:spring-boot-starter-actuator')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('org.springframework.security.oauth:spring-security-oauth2')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('com.querydsl:querydsl-mongodb')
    compile('com.querydsl:querydsl-apt')
    compile('com.querydsl:querydsl-core')
    compile('joda-time:joda-time')
    //compile('org.mongodb.morphia:morphia')
    //querydslapt('com.querydsl:querydsl-apt')

    compile("io.swagger:swagger-annotations")

    compile('net.kingsilk:qh-oauth-client')
    compile('net.kingsilk:qh-oauth-api')



    compile('net.kingsilk:wx4j-broker-msg-api')
    compile('net.kingsilk:wx4j-broker-api')
    compile('net.kingsilk:wx4j-broker-client')
    compile('net.kingsilk:wx4j-api')
    compile('net.kingsilk:wx4j-client')

    compile('net.kingsilk:qh-platform-api')
    compile('net.kingsilk:qh-platform-client')

    compile('net.kingsilk:qh-platform-msg-api')
    compile('net.kingsilk:qh-platform-msg-impl')

    compile 'org.apache.poi:poi'
    compile 'org.apache.poi:poi-ooxml'

}

test {
    testLogging.showStandardStreams = false
}


bootRun {
    addResources = true
    systemProperties = System.properties
}

bootRepackage {
    enabled = false
}

springBoot {
    buildInfo {
        additionalProperties = [
                'foo': 'bar'
        ]
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            artifact sourcesJar {
                classifier "sources"
            }
        }
    }
}

jar {
    manifest {
        attributes "Implementation-Version": project.version
    }
}
